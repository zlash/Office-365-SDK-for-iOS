/*******************************************************************************
**NOTE** This code was generated by a tool and will occasionally be
overwritten. We welcome comments and issues regarding this code; they will be
addressed in the generation tool. If you wish to submit pull requests, please
do so for the templates in that tool.

This code was generated by Vipr (https://github.com/microsoft/vipr) using
the T4TemplateWriter (https://github.com/msopentech/vipr-t4templatewriter).

Copyright (c) Microsoft Open Technologies, Inc. All Rights Reserved.
Licensed under the Apache License 2.0; see LICENSE in the source repository
root for authoritative license information.ï»¿
******************************************************************************/
#import "MSOneNoteApiFetchers.h"

/**
* The implementation file for type MSOneNoteApiSectionOperations.
*/

@implementation MSOneNoteApiSectionOperations

- (instancetype)initWithUrl:(NSString *)urlComponent parent:(id<MSOrcExecutable>)parent {
 
    return [super initOperationWithUrl:urlComponent parent:parent];
}

- (void)copyToNotebookWithId:(NSString *)id siteCollectionId:(NSString *)siteCollectionId siteId:(NSString *)siteId groupId:(NSString *)groupId renameAs:(NSString *)renameAs callback:(void (^)(MSOneNoteApiCopyStatusModel *copyStatusModel, MSOrcError *error))callback {
	
	NSString *idString = [self.resolver.jsonSerializer serialize:id property:@"id"];
	NSString *siteCollectionIdString = [self.resolver.jsonSerializer serialize:siteCollectionId property:@"siteCollectionId"];
	NSString *siteIdString = [self.resolver.jsonSerializer serialize:siteId property:@"siteId"];
	NSString *groupIdString = [self.resolver.jsonSerializer serialize:groupId property:@"groupId"];
	NSString *renameAsString = [self.resolver.jsonSerializer serialize:renameAs property:@"renameAs"];
	return [self copyToNotebookRawWithId:idString siteCollectionId:siteCollectionIdString siteId:siteIdString groupId:groupIdString renameAs:renameAsString callback:^(NSString *returnValue, MSOrcError *e) {
       
	   if (e == nil) {

			MSOneNoteApiCopyStatusModel * result = (MSOneNoteApiCopyStatusModel *)[super.resolver.jsonSerializer deserialize:[returnValue dataUsingEncoding:NSUTF8StringEncoding] asClass:[MSOneNoteApiCopyStatusModel class]];
            callback(result, e);
        } 
		else {

            callback(nil, e);
        }
    }];
}

- (void)copyToNotebookRawWithId:(NSString *) id siteCollectionId:(NSString *) siteCollectionId siteId:(NSString *) siteId groupId:(NSString *) groupId renameAs:(NSString *) renameAs callback:(void(^)(NSString *returnValue, MSOrcError *error))callback {

	id<MSOrcRequest> request = [super.resolver createOrcRequest];
	NSArray *parameters = [[NSArray alloc] initWithObjects:
                          [[NSDictionary alloc] initWithObjectsAndKeys :id,@"id", nil],
                          [[NSDictionary alloc] initWithObjectsAndKeys :siteCollectionId,@"siteCollectionId", nil],
                          [[NSDictionary alloc] initWithObjectsAndKeys :siteId,@"siteId", nil],
                          [[NSDictionary alloc] initWithObjectsAndKeys :groupId,@"groupId", nil],
                          [[NSDictionary alloc] initWithObjectsAndKeys :renameAs,@"renameAs", nil], nil];

	NSData* payload = [[MSOrcBaseContainer generatePayloadWithParameters:parameters dependencyResolver:self.resolver] dataUsingEncoding:NSUTF8StringEncoding];

	[request setContent:payload];


	
	[request setVerb:HTTP_VERB_POST];
	 	[request.url appendPathComponent:@"Microsoft.OneNote.Api.CopyToNotebook"];
     
	return [super orcExecuteRequest:request callback:^(id<MSOrcResponse> response, MSOrcError *e) {
        
		if (e == nil) {
            
			callback([[NSString alloc] initWithData:response.data encoding:NSUTF8StringEncoding], e);
        }
        else {

            callback([[NSString alloc] initWithFormat:@"%d", response.status], e);
        }
    }];
}
    				
- (void)copyToSectionGroupWithId:(NSString *)id siteCollectionId:(NSString *)siteCollectionId siteId:(NSString *)siteId groupId:(NSString *)groupId renameAs:(NSString *)renameAs callback:(void (^)(MSOneNoteApiCopyStatusModel *copyStatusModel, MSOrcError *error))callback {
	
	NSString *idString = [self.resolver.jsonSerializer serialize:id property:@"id"];
	NSString *siteCollectionIdString = [self.resolver.jsonSerializer serialize:siteCollectionId property:@"siteCollectionId"];
	NSString *siteIdString = [self.resolver.jsonSerializer serialize:siteId property:@"siteId"];
	NSString *groupIdString = [self.resolver.jsonSerializer serialize:groupId property:@"groupId"];
	NSString *renameAsString = [self.resolver.jsonSerializer serialize:renameAs property:@"renameAs"];
	return [self copyToSectionGroupRawWithId:idString siteCollectionId:siteCollectionIdString siteId:siteIdString groupId:groupIdString renameAs:renameAsString callback:^(NSString *returnValue, MSOrcError *e) {
       
	   if (e == nil) {

			MSOneNoteApiCopyStatusModel * result = (MSOneNoteApiCopyStatusModel *)[super.resolver.jsonSerializer deserialize:[returnValue dataUsingEncoding:NSUTF8StringEncoding] asClass:[MSOneNoteApiCopyStatusModel class]];
            callback(result, e);
        } 
		else {

            callback(nil, e);
        }
    }];
}

- (void)copyToSectionGroupRawWithId:(NSString *) id siteCollectionId:(NSString *) siteCollectionId siteId:(NSString *) siteId groupId:(NSString *) groupId renameAs:(NSString *) renameAs callback:(void(^)(NSString *returnValue, MSOrcError *error))callback {

	id<MSOrcRequest> request = [super.resolver createOrcRequest];
	NSArray *parameters = [[NSArray alloc] initWithObjects:
                          [[NSDictionary alloc] initWithObjectsAndKeys :id,@"id", nil],
                          [[NSDictionary alloc] initWithObjectsAndKeys :siteCollectionId,@"siteCollectionId", nil],
                          [[NSDictionary alloc] initWithObjectsAndKeys :siteId,@"siteId", nil],
                          [[NSDictionary alloc] initWithObjectsAndKeys :groupId,@"groupId", nil],
                          [[NSDictionary alloc] initWithObjectsAndKeys :renameAs,@"renameAs", nil], nil];

	NSData* payload = [[MSOrcBaseContainer generatePayloadWithParameters:parameters dependencyResolver:self.resolver] dataUsingEncoding:NSUTF8StringEncoding];

	[request setContent:payload];


	
	[request setVerb:HTTP_VERB_POST];
	 	[request.url appendPathComponent:@"Microsoft.OneNote.Api.CopyToSectionGroup"];
     
	return [super orcExecuteRequest:request callback:^(id<MSOrcResponse> response, MSOrcError *e) {
        
		if (e == nil) {
            
			callback([[NSString alloc] initWithData:response.data encoding:NSUTF8StringEncoding], e);
        }
        else {

            callback([[NSString alloc] initWithFormat:@"%d", response.status], e);
        }
    }];
}
    				
- (void)thumbnailWithCallback:(void (^)(NSStream *stream, MSOrcError *error))callback {
	
	return [self thumbnailRawWithCallback:^(NSString *returnValue, MSOrcError *e) {
       
	   if (e == nil) {

			NSStream * result = (NSStream *)[super.resolver.jsonSerializer deserialize:[returnValue dataUsingEncoding:NSUTF8StringEncoding] asClass:[NSStream class]];
            callback(result, e);
        } 
		else {

            callback(nil, e);
        }
    }];
}

- (void)thumbnailRawWithCallback:(void(^)(NSString *returnValue, MSOrcError *error))callback {

	id<MSOrcRequest> request = [super.resolver createOrcRequest];
	

	
	[request setVerb:HTTP_VERB_POST];
	 	[request.url appendPathComponent:@"Microsoft.OneNote.Api.Thumbnail"];
     
	return [super orcExecuteRequest:request callback:^(id<MSOrcResponse> response, MSOrcError *e) {
        
		if (e == nil) {
            
			callback([[NSString alloc] initWithData:response.data encoding:NSUTF8StringEncoding], e);
        }
        else {

            callback([[NSString alloc] initWithFormat:@"%d", response.status], e);
        }
    }];
}
    				
@end