/*******************************************************************************
**NOTE** This code was generated by a tool and will occasionally be
overwritten. We welcome comments and issues regarding this code; they will be
addressed in the generation tool. If you wish to submit pull requests, please
do so for the templates in that tool.

This code was generated by Vipr (https://github.com/microsoft/vipr) using
the T4TemplateWriter (https://github.com/msopentech/vipr-t4templatewriter).

Copyright (c) Microsoft Open Technologies, Inc. All Rights Reserved.
Licensed under the Apache License 2.0; see LICENSE in the source repository
root for authoritative license information.ï»¿
******************************************************************************/

#import "MSGraphServiceModels.h"

/**
* The implementation file for type MSGraphServiceGroup.
*/

@implementation MSGraphServiceGroup	

@synthesize odataType = _odataType;
@synthesize $$__$$description = _$$__$$description;
@synthesize dirSyncEnabled = _dirSyncEnabled;
@synthesize displayName = _displayName;
@synthesize groupType = _groupType;
@synthesize isPublic = _isPublic;
@synthesize lastDirSyncTime = _lastDirSyncTime;
@synthesize mail = _mail;
@synthesize mailNickname = _mailNickname;
@synthesize mailEnabled = _mailEnabled;
@synthesize onPremisesSecurityIdentifier = _onPremisesSecurityIdentifier;
@synthesize provisioningErrors = _provisioningErrors;
@synthesize proxyAddresses = _proxyAddresses;
@synthesize securityEnabled = _securityEnabled;
@synthesize AccessType = _accessType;
@synthesize EmailAddress = _emailAddress;
@synthesize AllowExternalSenders = _allowExternalSenders;
@synthesize AutoSubscribeNewMembers = _autoSubscribeNewMembers;
@synthesize IsSubscribedByMail = _isSubscribedByMail;
@synthesize IsFavorite = _isFavorite;
@synthesize UnseenCount = _unseenCount;
@synthesize appRoleAssignments = _appRoleAssignments;
@synthesize members = _members;
@synthesize memberOf = _memberOf;
@synthesize createdOnBehalfOf = _createdOnBehalfOf;
@synthesize owners = _owners;
@synthesize GroupPhoto = _groupPhoto;
@synthesize GroupPhotos = _groupPhotos;
@synthesize Conversations = _conversations;
@synthesize Threads = _threads;
@synthesize Calendar = _calendar;
@synthesize Events = _events;
@synthesize CalendarView = _calendarView;
@synthesize files = _files;

- (instancetype)init {

	if (self = [super init]) {

		_odataType = @"#Microsoft.Graph.Group";
		_provisioningErrors = [[NSMutableArray alloc] initWithCollectionType:@"MSGraphServiceProvisioningError"];
		_proxyAddresses = [[NSMutableArray alloc] initWithCollectionType:@"MSGraphServiceString"];
		_appRoleAssignments = [[NSMutableArray alloc] initWithCollectionType:@"MSGraphServiceAppRoleAssignment"];
		_members = [[NSMutableArray alloc] initWithCollectionType:@"MSGraphServiceDirectoryObject"];
		_memberOf = [[NSMutableArray alloc] initWithCollectionType:@"MSGraphServiceDirectoryObject"];
		_owners = [[NSMutableArray alloc] initWithCollectionType:@"MSGraphServiceDirectoryObject"];
		_groupPhotos = [[NSMutableArray alloc] initWithCollectionType:@"MSGraphServicePhoto"];
		_conversations = [[NSMutableArray alloc] initWithCollectionType:@"MSGraphServiceConversation"];
		_threads = [[NSMutableArray alloc] initWithCollectionType:@"MSGraphServiceConversationThread"];
		_events = [[NSMutableArray alloc] initWithCollectionType:@"MSGraphServiceEvent"];
		_calendarView = [[NSMutableArray alloc] initWithCollectionType:@"MSGraphServiceEvent"];
		_files = [[NSMutableArray alloc] initWithCollectionType:@"MSGraphServiceItem"];
    }

	return self;
}

- (void)setDescription:(NSString *) $$__$$description {
    _$$__$$description = $$__$$description;
	[self valueChanged:$$__$$description forProperty:@"$$__$$description"];
}
    
- (void)setDirSyncEnabled:(BOOL ) dirSyncEnabled {
    _dirSyncEnabled = dirSyncEnabled;
    [self valueChangedForBool:dirSyncEnabled forProperty:@"dirSyncEnabled"];
}
    
- (void)setDisplayName:(NSString *) displayName {
    _displayName = displayName;
	[self valueChanged:displayName forProperty:@"displayName"];
}
    
- (void)setGroupType:(NSString *) groupType {
    _groupType = groupType;
	[self valueChanged:groupType forProperty:@"groupType"];
}
    
- (void)setIsPublic:(BOOL ) isPublic {
    _isPublic = isPublic;
    [self valueChangedForBool:isPublic forProperty:@"isPublic"];
}
    
- (void)setLastDirSyncTime:(NSDate *) lastDirSyncTime {
    _lastDirSyncTime = lastDirSyncTime;
	[self valueChanged:lastDirSyncTime forProperty:@"lastDirSyncTime"];
}
    
- (void)setMail:(NSString *) mail {
    _mail = mail;
	[self valueChanged:mail forProperty:@"mail"];
}
    
- (void)setMailNickname:(NSString *) mailNickname {
    _mailNickname = mailNickname;
	[self valueChanged:mailNickname forProperty:@"mailNickname"];
}
    
- (void)setMailEnabled:(BOOL ) mailEnabled {
    _mailEnabled = mailEnabled;
    [self valueChangedForBool:mailEnabled forProperty:@"mailEnabled"];
}
    
- (void)setOnPremisesSecurityIdentifier:(NSString *) onPremisesSecurityIdentifier {
    _onPremisesSecurityIdentifier = onPremisesSecurityIdentifier;
	[self valueChanged:onPremisesSecurityIdentifier forProperty:@"onPremisesSecurityIdentifier"];
}
    
- (void)setProvisioningErrors:(NSMutableArray *) provisioningErrors {
    _provisioningErrors = provisioningErrors;
	[self valueChanged:provisioningErrors forProperty:@"provisioningErrors"];
}
    
- (void)setProxyAddresses:(NSMutableArray *) proxyAddresses {
    _proxyAddresses = proxyAddresses;
	[self valueChanged:proxyAddresses forProperty:@"proxyAddresses"];
}
    
- (void)setSecurityEnabled:(BOOL ) securityEnabled {
    _securityEnabled = securityEnabled;
    [self valueChangedForBool:securityEnabled forProperty:@"securityEnabled"];
}
    - (void)setAccessTypeString:(NSString *)value {

	if ([value isEqualToString:@"None"]) {	

		_accessType  = MSGraphService_GroupAccessType_None;
        [self valueChangedForInt:MSGraphService_GroupAccessType_None forProperty:@"AccessType"];
	}

	if ([value isEqualToString:@"Private"]) {	

		_accessType  = MSGraphService_GroupAccessType_Private;
        [self valueChangedForInt:MSGraphService_GroupAccessType_Private forProperty:@"AccessType"];
	}

	if ([value isEqualToString:@"Secret"]) {	

		_accessType  = MSGraphService_GroupAccessType_Secret;
        [self valueChangedForInt:MSGraphService_GroupAccessType_Secret forProperty:@"AccessType"];
	}

	if ([value isEqualToString:@"Public"]) {	

		_accessType  = MSGraphService_GroupAccessType_Public;
        [self valueChangedForInt:MSGraphService_GroupAccessType_Public forProperty:@"AccessType"];
	}
}

- (void)setEmailAddress:(NSString *) emailAddress {
    _emailAddress = emailAddress;
	[self valueChanged:emailAddress forProperty:@"EmailAddress"];
}
    
- (void)setAllowExternalSenders:(BOOL ) allowExternalSenders {
    _allowExternalSenders = allowExternalSenders;
    [self valueChangedForBool:allowExternalSenders forProperty:@"AllowExternalSenders"];
}
    
- (void)setAutoSubscribeNewMembers:(BOOL ) autoSubscribeNewMembers {
    _autoSubscribeNewMembers = autoSubscribeNewMembers;
    [self valueChangedForBool:autoSubscribeNewMembers forProperty:@"AutoSubscribeNewMembers"];
}
    
- (void)setIsSubscribedByMail:(BOOL ) isSubscribedByMail {
    _isSubscribedByMail = isSubscribedByMail;
    [self valueChangedForBool:isSubscribedByMail forProperty:@"IsSubscribedByMail"];
}
    
- (void)setIsFavorite:(BOOL ) isFavorite {
    _isFavorite = isFavorite;
    [self valueChangedForBool:isFavorite forProperty:@"IsFavorite"];
}
    
- (void)setUnseenCount:(int ) unseenCount {
    _unseenCount = unseenCount;
    [self valueChangedForInt:unseenCount forProperty:@"UnseenCount"];
}
    
- (void)setAppRoleAssignments:(NSMutableArray *) appRoleAssignments {
    _appRoleAssignments = appRoleAssignments;
	[self valueChanged:appRoleAssignments forProperty:@"appRoleAssignments"];
}
    
- (void)setMembers:(NSMutableArray *) members {
    _members = members;
	[self valueChanged:members forProperty:@"members"];
}
    
- (void)setMemberOf:(NSMutableArray *) memberOf {
    _memberOf = memberOf;
	[self valueChanged:memberOf forProperty:@"memberOf"];
}
    
- (void)setCreatedOnBehalfOf:(MSGraphServiceDirectoryObject *) createdOnBehalfOf {
    _createdOnBehalfOf = createdOnBehalfOf;
	[self valueChanged:createdOnBehalfOf forProperty:@"createdOnBehalfOf"];
}
    
- (void)setOwners:(NSMutableArray *) owners {
    _owners = owners;
	[self valueChanged:owners forProperty:@"owners"];
}
    
- (void)setGroupPhoto:(MSGraphServicePhoto *) groupPhoto {
    _groupPhoto = groupPhoto;
	[self valueChanged:groupPhoto forProperty:@"GroupPhoto"];
}
    
- (void)setGroupPhotos:(NSMutableArray *) groupPhotos {
    _groupPhotos = groupPhotos;
	[self valueChanged:groupPhotos forProperty:@"GroupPhotos"];
}
    
- (void)setConversations:(NSMutableArray *) conversations {
    _conversations = conversations;
	[self valueChanged:conversations forProperty:@"Conversations"];
}
    
- (void)setThreads:(NSMutableArray *) threads {
    _threads = threads;
	[self valueChanged:threads forProperty:@"Threads"];
}
    
- (void)setCalendar:(MSGraphServiceCalendar *) calendar {
    _calendar = calendar;
	[self valueChanged:calendar forProperty:@"Calendar"];
}
    
- (void)setEvents:(NSMutableArray *) events {
    _events = events;
	[self valueChanged:events forProperty:@"Events"];
}
    
- (void)setCalendarView:(NSMutableArray *) calendarView {
    _calendarView = calendarView;
	[self valueChanged:calendarView forProperty:@"CalendarView"];
}
    
- (void)setFiles:(NSMutableArray *) files {
    _files = files;
	[self valueChanged:files forProperty:@"files"];
}
    
@end