/*******************************************************************************
**NOTE** This code was generated by a tool and will occasionally be
overwritten. We welcome comments and issues regarding this code; they will be
addressed in the generation tool. If you wish to submit pull requests, please
do so for the templates in that tool.

This code was generated by Vipr (https://github.com/microsoft/vipr) using
the T4TemplateWriter (https://github.com/msopentech/vipr-t4templatewriter).

Copyright (c) Microsoft Open Technologies, Inc. All Rights Reserved.
Licensed under the Apache License 2.0; see LICENSE in the source repository
root for authoritative license information.ï»¿
******************************************************************************/

#import "MSEntityContainerModels.h"

/**
* The implementation file for type MSEntityContainerEvent.
*/

@implementation MSEntityContainerEvent	

@synthesize odataType = _odataType;
@synthesize Subject = _subject;
@synthesize Body = _body;
@synthesize BodyPreview = _bodyPreview;
@synthesize Importance = _importance;
@synthesize HasAttachments = _hasAttachments;
@synthesize Start = _start;
@synthesize OriginalStart = _originalStart;
@synthesize StartTimeZone = _startTimeZone;
@synthesize End = _end;
@synthesize EndTimeZone = _endTimeZone;
@synthesize Reminder = _reminder;
@synthesize Location = _location;
@synthesize ShowAs = _showAs;
@synthesize ResponseStatus = _responseStatus;
@synthesize IsAllDay = _isAllDay;
@synthesize IsCancelled = _isCancelled;
@synthesize IsOrganizer = _isOrganizer;
@synthesize ResponseRequested = _responseRequested;
@synthesize Type = _type;
@synthesize SeriesMasterId = _seriesMasterId;
@synthesize Attendees = _attendees;
@synthesize Recurrence = _recurrence;
@synthesize Organizer = _organizer;
@synthesize iCalUId = _iCalUId;
@synthesize WebLink = _webLink;
@synthesize Attachments = _attachments;
@synthesize Calendar = _calendar;
@synthesize Instances = _instances;

- (instancetype)init {

	if (self = [super init]) {

		_odataType = @"#Microsoft.OutlookServices.Event";
		_attendees = [[NSMutableArray alloc] initWithCollectionType:@"MSEntityContainerAttendee"];
		_attachments = [[NSMutableArray alloc] initWithCollectionType:@"MSEntityContainerAttachment"];
		_instances = [[NSMutableArray alloc] initWithCollectionType:@"MSEntityContainerEvent"];
    }

	return self;
}

- (void)setSubject:(NSString *) subject {
    _subject = subject;
	[self valueChanged:subject forProperty:@"Subject"];
}
    
- (void)setBody:(MSEntityContainerItemBody *) body {
    _body = body;
	[self valueChanged:body forProperty:@"Body"];
}
    
- (void)setBodyPreview:(NSString *) bodyPreview {
    _bodyPreview = bodyPreview;
	[self valueChanged:bodyPreview forProperty:@"BodyPreview"];
}
    - (void)setImportanceString:(NSString *)value {

	if ([value isEqualToString:@"Low"]) {	

		_importance  = MSEntityContainer_Importance_Low;
        [self valueChangedForInt:MSEntityContainer_Importance_Low forProperty:@"Importance"];
	}

	if ([value isEqualToString:@"Normal"]) {	

		_importance  = MSEntityContainer_Importance_Normal;
        [self valueChangedForInt:MSEntityContainer_Importance_Normal forProperty:@"Importance"];
	}

	if ([value isEqualToString:@"High"]) {	

		_importance  = MSEntityContainer_Importance_High;
        [self valueChangedForInt:MSEntityContainer_Importance_High forProperty:@"Importance"];
	}
}

- (void)setHasAttachments:(BOOL ) hasAttachments {
    _hasAttachments = hasAttachments;
    [self valueChangedForBool:hasAttachments forProperty:@"HasAttachments"];
}
    
- (void)setStart:(NSDate *) start {
    _start = start;
	[self valueChanged:start forProperty:@"Start"];
}
    
- (void)setOriginalStart:(NSDate *) originalStart {
    _originalStart = originalStart;
	[self valueChanged:originalStart forProperty:@"OriginalStart"];
}
    
- (void)setStartTimeZone:(NSString *) startTimeZone {
    _startTimeZone = startTimeZone;
	[self valueChanged:startTimeZone forProperty:@"StartTimeZone"];
}
    
- (void)setEnd:(NSDate *) end {
    _end = end;
	[self valueChanged:end forProperty:@"End"];
}
    
- (void)setEndTimeZone:(NSString *) endTimeZone {
    _endTimeZone = endTimeZone;
	[self valueChanged:endTimeZone forProperty:@"EndTimeZone"];
}
    
- (void)setReminder:(int ) reminder {
    _reminder = reminder;
    [self valueChangedForInt:reminder forProperty:@"Reminder"];
}
    
- (void)setLocation:(MSEntityContainerLocation *) location {
    _location = location;
	[self valueChanged:location forProperty:@"Location"];
}
    - (void)setShowAsString:(NSString *)value {

	if ([value isEqualToString:@"Free"]) {	

		_showAs  = MSEntityContainer_FreeBusyStatus_Free;
        [self valueChangedForInt:MSEntityContainer_FreeBusyStatus_Free forProperty:@"ShowAs"];
	}

	if ([value isEqualToString:@"Tentative"]) {	

		_showAs  = MSEntityContainer_FreeBusyStatus_Tentative;
        [self valueChangedForInt:MSEntityContainer_FreeBusyStatus_Tentative forProperty:@"ShowAs"];
	}

	if ([value isEqualToString:@"Busy"]) {	

		_showAs  = MSEntityContainer_FreeBusyStatus_Busy;
        [self valueChangedForInt:MSEntityContainer_FreeBusyStatus_Busy forProperty:@"ShowAs"];
	}

	if ([value isEqualToString:@"Oof"]) {	

		_showAs  = MSEntityContainer_FreeBusyStatus_Oof;
        [self valueChangedForInt:MSEntityContainer_FreeBusyStatus_Oof forProperty:@"ShowAs"];
	}

	if ([value isEqualToString:@"WorkingElsewhere"]) {	

		_showAs  = MSEntityContainer_FreeBusyStatus_WorkingElsewhere;
        [self valueChangedForInt:MSEntityContainer_FreeBusyStatus_WorkingElsewhere forProperty:@"ShowAs"];
	}

	if ([value isEqualToString:@"Unknown"]) {	

		_showAs  = MSEntityContainer_FreeBusyStatus_Unknown;
        [self valueChangedForInt:MSEntityContainer_FreeBusyStatus_Unknown forProperty:@"ShowAs"];
	}
}

- (void)setResponseStatus:(MSEntityContainerResponseStatus *) responseStatus {
    _responseStatus = responseStatus;
	[self valueChanged:responseStatus forProperty:@"ResponseStatus"];
}
    
- (void)setIsAllDay:(BOOL ) isAllDay {
    _isAllDay = isAllDay;
    [self valueChangedForBool:isAllDay forProperty:@"IsAllDay"];
}
    
- (void)setIsCancelled:(BOOL ) isCancelled {
    _isCancelled = isCancelled;
    [self valueChangedForBool:isCancelled forProperty:@"IsCancelled"];
}
    
- (void)setIsOrganizer:(BOOL ) isOrganizer {
    _isOrganizer = isOrganizer;
    [self valueChangedForBool:isOrganizer forProperty:@"IsOrganizer"];
}
    
- (void)setResponseRequested:(BOOL ) responseRequested {
    _responseRequested = responseRequested;
    [self valueChangedForBool:responseRequested forProperty:@"ResponseRequested"];
}
    - (void)setTypeString:(NSString *)value {

	if ([value isEqualToString:@"SingleInstance"]) {	

		_type  = MSEntityContainer_EventType_SingleInstance;
        [self valueChangedForInt:MSEntityContainer_EventType_SingleInstance forProperty:@"Type"];
	}

	if ([value isEqualToString:@"Occurrence"]) {	

		_type  = MSEntityContainer_EventType_Occurrence;
        [self valueChangedForInt:MSEntityContainer_EventType_Occurrence forProperty:@"Type"];
	}

	if ([value isEqualToString:@"Exception"]) {	

		_type  = MSEntityContainer_EventType_Exception;
        [self valueChangedForInt:MSEntityContainer_EventType_Exception forProperty:@"Type"];
	}

	if ([value isEqualToString:@"SeriesMaster"]) {	

		_type  = MSEntityContainer_EventType_SeriesMaster;
        [self valueChangedForInt:MSEntityContainer_EventType_SeriesMaster forProperty:@"Type"];
	}
}

- (void)setSeriesMasterId:(NSString *) seriesMasterId {
    _seriesMasterId = seriesMasterId;
	[self valueChanged:seriesMasterId forProperty:@"SeriesMasterId"];
}
    
- (void)setAttendees:(NSMutableArray *) attendees {
    _attendees = attendees;
	[self valueChanged:attendees forProperty:@"Attendees"];
}
    
- (void)setRecurrence:(MSEntityContainerPatternedRecurrence *) recurrence {
    _recurrence = recurrence;
	[self valueChanged:recurrence forProperty:@"Recurrence"];
}
    
- (void)setOrganizer:(MSEntityContainerRecipient *) organizer {
    _organizer = organizer;
	[self valueChanged:organizer forProperty:@"Organizer"];
}
    
- (void)setICalUId:(NSString *) iCalUId {
    _iCalUId = iCalUId;
	[self valueChanged:iCalUId forProperty:@"iCalUId"];
}
    
- (void)setWebLink:(NSString *) webLink {
    _webLink = webLink;
	[self valueChanged:webLink forProperty:@"WebLink"];
}
    
- (void)setAttachments:(NSMutableArray *) attachments {
    _attachments = attachments;
	[self valueChanged:attachments forProperty:@"Attachments"];
}
    
- (void)setCalendar:(MSEntityContainerCalendar *) calendar {
    _calendar = calendar;
	[self valueChanged:calendar forProperty:@"Calendar"];
}
    
- (void)setInstances:(NSMutableArray *) instances {
    _instances = instances;
	[self valueChanged:instances forProperty:@"Instances"];
}
    
@end