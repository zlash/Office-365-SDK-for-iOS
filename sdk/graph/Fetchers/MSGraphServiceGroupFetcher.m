/*******************************************************************************
**NOTE** This code was generated by a tool and will occasionally be
overwritten. We welcome comments and issues regarding this code; they will be
addressed in the generation tool. If you wish to submit pull requests, please
do so for the templates in that tool.

This code was generated by Vipr (https://github.com/microsoft/vipr) using
the T4TemplateWriter (https://github.com/msopentech/vipr-t4templatewriter).

Copyright (c) Microsoft Open Technologies, Inc. All Rights Reserved.
Licensed under the Apache License 2.0; see LICENSE in the source repository
root for authoritative license information.ï»¿
******************************************************************************/
#import "MSGraphServiceFetchers.h"

@implementation MSGraphServiceGroupFetcher

@synthesize operations = _operations;

- (instancetype)initWithUrl:(NSString *)urlComponent parent:(id<MSOrcExecutable>)parent {

    if (self = [super initWithUrl:urlComponent parent:parent asClass:[MSGraphServiceGroup class]]) {

		_operations = [[MSGraphServiceGroupOperations alloc] initOperationWithUrl:urlComponent parent:parent];
    }

    return self;
}

- (void)update:(id)entity callback:(void (^)(MSGraphServiceGroup *group, MSOrcError *e))callback {

	return [super update:entity callback:callback];
}

- (void)delete:(void (^)(int status, MSOrcError *e))callback {

	return [super deleteWithCallback:callback];
}

- (MSGraphServiceGroupFetcher *)addCustomParametersWithName:(NSString *)name value:(id)value {
    [super addCustomParametersWithName:name value:value];
    
    return self;
}

- (MSGraphServiceGroupFetcher *)addCustomHeaderWithName:(NSString *)name value:(NSString *)value {
    [super addCustomHeaderWithName:name value:value];
    
    return self;
}

- (MSGraphServiceGroupFetcher *)select:(NSString *)params {
    [super select:params];
    
    return self;
}

- (MSGraphServiceGroupFetcher *)expand:(NSString *)value {
    [super select:value];
    
    return self;
}

- (void) readWithCallback:(void (^)(MSGraphServiceGroup *group, MSOrcError *error))callback {
    [super readWithCallback:^(id response, MSOrcError *error) {
        callback(response, error);
    }];
}

- (MSGraphServiceAppRoleAssignmentCollectionFetcher *)appRoleAssignments {

    return [[MSGraphServiceAppRoleAssignmentCollectionFetcher alloc] initWithUrl:@"appRoleAssignments" parent:self asClass:[MSGraphServiceAppRoleAssignment class]];
}

- (MSGraphServiceAppRoleAssignmentFetcher *)getAppRoleAssignmentsById:(NSString *)id {

    return [[[MSGraphServiceAppRoleAssignmentCollectionFetcher alloc] initWithUrl:@"appRoleAssignments" parent:self asClass:[MSGraphServiceAppRoleAssignment class]] getById:id];
}

- (MSGraphServiceDirectoryObjectCollectionFetcher *)members {

    return [[MSGraphServiceDirectoryObjectCollectionFetcher alloc] initWithUrl:@"members" parent:self asClass:[MSGraphServiceDirectoryObject class]];
}

- (MSGraphServiceDirectoryObjectFetcher *)getMembersById:(NSString *)id {

    return [[[MSGraphServiceDirectoryObjectCollectionFetcher alloc] initWithUrl:@"members" parent:self asClass:[MSGraphServiceDirectoryObject class]] getById:id];
}

- (MSGraphServiceDirectoryObjectCollectionFetcher *)memberOf {

    return [[MSGraphServiceDirectoryObjectCollectionFetcher alloc] initWithUrl:@"memberOf" parent:self asClass:[MSGraphServiceDirectoryObject class]];
}

- (MSGraphServiceDirectoryObjectFetcher *)getMemberOfById:(NSString *)id {

    return [[[MSGraphServiceDirectoryObjectCollectionFetcher alloc] initWithUrl:@"memberOf" parent:self asClass:[MSGraphServiceDirectoryObject class]] getById:id];
}

- (MSGraphServiceDirectoryObjectFetcher *)createdOnBehalfOf {

	 return [[MSGraphServiceDirectoryObjectFetcher alloc] initWithUrl:@"createdOnBehalfOf" parent:self asClass:[MSGraphServiceDirectoryObject class]];
}

- (MSGraphServiceDirectoryObjectCollectionFetcher *)owners {

    return [[MSGraphServiceDirectoryObjectCollectionFetcher alloc] initWithUrl:@"owners" parent:self asClass:[MSGraphServiceDirectoryObject class]];
}

- (MSGraphServiceDirectoryObjectFetcher *)getOwnersById:(NSString *)id {

    return [[[MSGraphServiceDirectoryObjectCollectionFetcher alloc] initWithUrl:@"owners" parent:self asClass:[MSGraphServiceDirectoryObject class]] getById:id];
}

- (MSGraphServicePhotoFetcher *)groupPhoto {

	 return [[MSGraphServicePhotoFetcher alloc] initWithUrl:@"GroupPhoto" parent:self asClass:[MSGraphServicePhoto class]];
}

- (MSGraphServicePhotoCollectionFetcher *)groupPhotos {

    return [[MSGraphServicePhotoCollectionFetcher alloc] initWithUrl:@"GroupPhotos" parent:self asClass:[MSGraphServicePhoto class]];
}

- (MSGraphServicePhotoFetcher *)getGroupPhotosById:(NSString *)id {

    return [[[MSGraphServicePhotoCollectionFetcher alloc] initWithUrl:@"GroupPhotos" parent:self asClass:[MSGraphServicePhoto class]] getById:id];
}

- (MSGraphServiceConversationCollectionFetcher *)conversations {

    return [[MSGraphServiceConversationCollectionFetcher alloc] initWithUrl:@"Conversations" parent:self asClass:[MSGraphServiceConversation class]];
}

- (MSGraphServiceConversationFetcher *)getConversationsById:(NSString *)id {

    return [[[MSGraphServiceConversationCollectionFetcher alloc] initWithUrl:@"Conversations" parent:self asClass:[MSGraphServiceConversation class]] getById:id];
}

- (MSGraphServiceConversationThreadCollectionFetcher *)threads {

    return [[MSGraphServiceConversationThreadCollectionFetcher alloc] initWithUrl:@"Threads" parent:self asClass:[MSGraphServiceConversationThread class]];
}

- (MSGraphServiceConversationThreadFetcher *)getThreadsById:(NSString *)id {

    return [[[MSGraphServiceConversationThreadCollectionFetcher alloc] initWithUrl:@"Threads" parent:self asClass:[MSGraphServiceConversationThread class]] getById:id];
}

- (MSGraphServiceCalendarFetcher *)calendar {

	 return [[MSGraphServiceCalendarFetcher alloc] initWithUrl:@"Calendar" parent:self asClass:[MSGraphServiceCalendar class]];
}

- (MSGraphServiceEventCollectionFetcher *)events {

    return [[MSGraphServiceEventCollectionFetcher alloc] initWithUrl:@"Events" parent:self asClass:[MSGraphServiceEvent class]];
}

- (MSGraphServiceEventFetcher *)getEventsById:(NSString *)id {

    return [[[MSGraphServiceEventCollectionFetcher alloc] initWithUrl:@"Events" parent:self asClass:[MSGraphServiceEvent class]] getById:id];
}

- (MSGraphServiceEventCollectionFetcher *)calendarView {

    return [[MSGraphServiceEventCollectionFetcher alloc] initWithUrl:@"CalendarView" parent:self asClass:[MSGraphServiceEvent class]];
}

- (MSGraphServiceEventFetcher *)getCalendarViewById:(NSString *)id {

    return [[[MSGraphServiceEventCollectionFetcher alloc] initWithUrl:@"CalendarView" parent:self asClass:[MSGraphServiceEvent class]] getById:id];
}

- (MSGraphServiceItemCollectionFetcher *)files {

    return [[MSGraphServiceItemCollectionFetcher alloc] initWithUrl:@"files" parent:self asClass:[MSGraphServiceItem class]];
}

- (MSGraphServiceItemFetcher *)getFilesById:(NSString *)id {

    return [[[MSGraphServiceItemCollectionFetcher alloc] initWithUrl:@"files" parent:self asClass:[MSGraphServiceItem class]] getById:id];
}

@end