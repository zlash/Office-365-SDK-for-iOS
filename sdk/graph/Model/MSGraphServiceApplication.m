/*******************************************************************************
**NOTE** This code was generated by a tool and will occasionally be
overwritten. We welcome comments and issues regarding this code; they will be
addressed in the generation tool. If you wish to submit pull requests, please
do so for the templates in that tool.

This code was generated by Vipr (https://github.com/microsoft/vipr) using
the T4TemplateWriter (https://github.com/msopentech/vipr-t4templatewriter).

Copyright (c) Microsoft Open Technologies, Inc. All Rights Reserved.
Licensed under the Apache License 2.0; see LICENSE in the source repository
root for authoritative license information.ï»¿
******************************************************************************/

#import "MSGraphServiceModels.h"

/**
* The implementation file for type MSGraphServiceApplication.
*/

@implementation MSGraphServiceApplication	

@synthesize odataType = _odataType;
@synthesize appId = _appId;
@synthesize appRoles = _appRoles;
@synthesize availableToOtherTenants = _availableToOtherTenants;
@synthesize displayName = _displayName;
@synthesize errorUrl = _errorUrl;
@synthesize groupMembershipClaims = _groupMembershipClaims;
@synthesize homepage = _homepage;
@synthesize identifierUris = _identifierUris;
@synthesize keyCredentials = _keyCredentials;
@synthesize knownClientApplications = _knownClientApplications;
@synthesize mainLogo = _mainLogo;
@synthesize logoutUrl = _logoutUrl;
@synthesize oauth2AllowImplicitFlow = _oauth2AllowImplicitFlow;
@synthesize oauth2AllowUrlPathMatching = _oauth2AllowUrlPathMatching;
@synthesize oauth2Permissions = _oauth2Permissions;
@synthesize oauth2RequirePostResponse = _oauth2RequirePostResponse;
@synthesize passwordCredentials = _passwordCredentials;
@synthesize publicClient = _publicClient;
@synthesize replyUrls = _replyUrls;
@synthesize requiredResourceAccess = _requiredResourceAccess;
@synthesize samlMetadataUrl = _samlMetadataUrl;
@synthesize extensionProperties = _extensionProperties;
@synthesize createdOnBehalfOf = _createdOnBehalfOf;
@synthesize owners = _owners;

- (instancetype)init {

	if (self = [super init]) {

		_odataType = @"#Microsoft.Graph.Application";
		_appRoles = [[NSMutableArray alloc] initWithCollectionType:@"MSGraphServiceAppRole"];
		_identifierUris = [[NSMutableArray alloc] initWithCollectionType:@"MSGraphServiceString"];
		_keyCredentials = [[NSMutableArray alloc] initWithCollectionType:@"MSGraphServiceKeyCredential"];
		_knownClientApplications = [[NSMutableArray alloc] initWithCollectionType:@"MSGraphServiceString"];
		_oauth2Permissions = [[NSMutableArray alloc] initWithCollectionType:@"MSGraphServiceOAuth2Permission"];
		_passwordCredentials = [[NSMutableArray alloc] initWithCollectionType:@"MSGraphServicePasswordCredential"];
		_replyUrls = [[NSMutableArray alloc] initWithCollectionType:@"MSGraphServiceString"];
		_requiredResourceAccess = [[NSMutableArray alloc] initWithCollectionType:@"MSGraphServiceRequiredResourceAccess"];
		_extensionProperties = [[NSMutableArray alloc] initWithCollectionType:@"MSGraphServiceExtensionProperty"];
		_owners = [[NSMutableArray alloc] initWithCollectionType:@"MSGraphServiceDirectoryObject"];
    }

	return self;
}

- (void)setAppId:(NSString *) appId {
    _appId = appId;
	[self valueChanged:appId forProperty:@"appId"];
}
    
- (void)setAppRoles:(NSMutableArray *) appRoles {
    _appRoles = appRoles;
	[self valueChanged:appRoles forProperty:@"appRoles"];
}
    
- (void)setAvailableToOtherTenants:(BOOL ) availableToOtherTenants {
    _availableToOtherTenants = availableToOtherTenants;
    [self valueChangedForBool:availableToOtherTenants forProperty:@"availableToOtherTenants"];
}
    
- (void)setDisplayName:(NSString *) displayName {
    _displayName = displayName;
	[self valueChanged:displayName forProperty:@"displayName"];
}
    
- (void)setErrorUrl:(NSString *) errorUrl {
    _errorUrl = errorUrl;
	[self valueChanged:errorUrl forProperty:@"errorUrl"];
}
    
- (void)setGroupMembershipClaims:(NSString *) groupMembershipClaims {
    _groupMembershipClaims = groupMembershipClaims;
	[self valueChanged:groupMembershipClaims forProperty:@"groupMembershipClaims"];
}
    
- (void)setHomepage:(NSString *) homepage {
    _homepage = homepage;
	[self valueChanged:homepage forProperty:@"homepage"];
}
    
- (void)setIdentifierUris:(NSMutableArray *) identifierUris {
    _identifierUris = identifierUris;
	[self valueChanged:identifierUris forProperty:@"identifierUris"];
}
    
- (void)setKeyCredentials:(NSMutableArray *) keyCredentials {
    _keyCredentials = keyCredentials;
	[self valueChanged:keyCredentials forProperty:@"keyCredentials"];
}
    
- (void)setKnownClientApplications:(NSMutableArray *) knownClientApplications {
    _knownClientApplications = knownClientApplications;
	[self valueChanged:knownClientApplications forProperty:@"knownClientApplications"];
}
    
- (void)setMainLogo:(NSStream *) mainLogo {
    _mainLogo = mainLogo;
	[self valueChanged:mainLogo forProperty:@"mainLogo"];
}
    
- (void)setLogoutUrl:(NSString *) logoutUrl {
    _logoutUrl = logoutUrl;
	[self valueChanged:logoutUrl forProperty:@"logoutUrl"];
}
    
- (void)setOauth2AllowImplicitFlow:(BOOL ) oauth2AllowImplicitFlow {
    _oauth2AllowImplicitFlow = oauth2AllowImplicitFlow;
    [self valueChangedForBool:oauth2AllowImplicitFlow forProperty:@"oauth2AllowImplicitFlow"];
}
    
- (void)setOauth2AllowUrlPathMatching:(BOOL ) oauth2AllowUrlPathMatching {
    _oauth2AllowUrlPathMatching = oauth2AllowUrlPathMatching;
    [self valueChangedForBool:oauth2AllowUrlPathMatching forProperty:@"oauth2AllowUrlPathMatching"];
}
    
- (void)setOauth2Permissions:(NSMutableArray *) oauth2Permissions {
    _oauth2Permissions = oauth2Permissions;
	[self valueChanged:oauth2Permissions forProperty:@"oauth2Permissions"];
}
    
- (void)setOauth2RequirePostResponse:(BOOL ) oauth2RequirePostResponse {
    _oauth2RequirePostResponse = oauth2RequirePostResponse;
    [self valueChangedForBool:oauth2RequirePostResponse forProperty:@"oauth2RequirePostResponse"];
}
    
- (void)setPasswordCredentials:(NSMutableArray *) passwordCredentials {
    _passwordCredentials = passwordCredentials;
	[self valueChanged:passwordCredentials forProperty:@"passwordCredentials"];
}
    
- (void)setPublicClient:(BOOL ) publicClient {
    _publicClient = publicClient;
    [self valueChangedForBool:publicClient forProperty:@"publicClient"];
}
    
- (void)setReplyUrls:(NSMutableArray *) replyUrls {
    _replyUrls = replyUrls;
	[self valueChanged:replyUrls forProperty:@"replyUrls"];
}
    
- (void)setRequiredResourceAccess:(NSMutableArray *) requiredResourceAccess {
    _requiredResourceAccess = requiredResourceAccess;
	[self valueChanged:requiredResourceAccess forProperty:@"requiredResourceAccess"];
}
    
- (void)setSamlMetadataUrl:(NSString *) samlMetadataUrl {
    _samlMetadataUrl = samlMetadataUrl;
	[self valueChanged:samlMetadataUrl forProperty:@"samlMetadataUrl"];
}
    
- (void)setExtensionProperties:(NSMutableArray *) extensionProperties {
    _extensionProperties = extensionProperties;
	[self valueChanged:extensionProperties forProperty:@"extensionProperties"];
}
    
- (void)setCreatedOnBehalfOf:(MSGraphServiceDirectoryObject *) createdOnBehalfOf {
    _createdOnBehalfOf = createdOnBehalfOf;
	[self valueChanged:createdOnBehalfOf forProperty:@"createdOnBehalfOf"];
}
    
- (void)setOwners:(NSMutableArray *) owners {
    _owners = owners;
	[self valueChanged:owners forProperty:@"owners"];
}
    
@end