/*******************************************************************************
**NOTE** This code was generated by a tool and will occasionally be
overwritten. We welcome comments and issues regarding this code; they will be
addressed in the generation tool. If you wish to submit pull requests, please
do so for the templates in that tool.

This code was generated by Vipr (https://github.com/microsoft/vipr) using
the T4TemplateWriter (https://github.com/msopentech/vipr-t4templatewriter).

Copyright (c) Microsoft Open Technologies, Inc. All Rights Reserved.
Licensed under the Apache License 2.0; see LICENSE in the source repository
root for authoritative license information.ï»¿
******************************************************************************/

#import "MSGraphServiceModels.h"

/**
* The implementation file for type MSGraphServiceDevice.
*/

@implementation MSGraphServiceDevice	

@synthesize odataType = _odataType;
@synthesize accountEnabled = _accountEnabled;
@synthesize alternativeSecurityIds = _alternativeSecurityIds;
@synthesize approximateLastLogonTimestamp = _approximateLastLogonTimestamp;
@synthesize deviceId = _deviceId;
@synthesize deviceMetadata = _deviceMetadata;
@synthesize deviceObjectVersion = _deviceObjectVersion;
@synthesize deviceOSType = _deviceOSType;
@synthesize deviceOSVersion = _deviceOSVersion;
@synthesize devicePhysicalIds = _devicePhysicalIds;
@synthesize deviceTrustType = _deviceTrustType;
@synthesize dirSyncEnabled = _dirSyncEnabled;
@synthesize displayName = _displayName;
@synthesize lastDirSyncTime = _lastDirSyncTime;
@synthesize registeredOwners = _registeredOwners;
@synthesize registeredUsers = _registeredUsers;

- (instancetype)init {

	if (self = [super init]) {

		_odataType = @"#Microsoft.Graph.Device";
		_alternativeSecurityIds = [[NSMutableArray alloc] initWithCollectionType:@"MSGraphServiceAlternativeSecurityId"];
		_devicePhysicalIds = [[NSMutableArray alloc] initWithCollectionType:@"MSGraphServiceString"];
		_registeredOwners = [[NSMutableArray alloc] initWithCollectionType:@"MSGraphServiceDirectoryObject"];
		_registeredUsers = [[NSMutableArray alloc] initWithCollectionType:@"MSGraphServiceDirectoryObject"];
    }

	return self;
}

- (void)setAccountEnabled:(BOOL ) accountEnabled {
    _accountEnabled = accountEnabled;
    [self valueChangedForBool:accountEnabled forProperty:@"accountEnabled"];
}
    
- (void)setAlternativeSecurityIds:(NSMutableArray *) alternativeSecurityIds {
    _alternativeSecurityIds = alternativeSecurityIds;
	[self valueChanged:alternativeSecurityIds forProperty:@"alternativeSecurityIds"];
}
    
- (void)setApproximateLastLogonTimestamp:(NSDate *) approximateLastLogonTimestamp {
    _approximateLastLogonTimestamp = approximateLastLogonTimestamp;
	[self valueChanged:approximateLastLogonTimestamp forProperty:@"approximateLastLogonTimestamp"];
}
    
- (void)setDeviceId:(NSString *) deviceId {
    _deviceId = deviceId;
	[self valueChanged:deviceId forProperty:@"deviceId"];
}
    
- (void)setDeviceMetadata:(NSString *) deviceMetadata {
    _deviceMetadata = deviceMetadata;
	[self valueChanged:deviceMetadata forProperty:@"deviceMetadata"];
}
    
- (void)setDeviceObjectVersion:(int ) deviceObjectVersion {
    _deviceObjectVersion = deviceObjectVersion;
    [self valueChangedForInt:deviceObjectVersion forProperty:@"deviceObjectVersion"];
}
    
- (void)setDeviceOSType:(NSString *) deviceOSType {
    _deviceOSType = deviceOSType;
	[self valueChanged:deviceOSType forProperty:@"deviceOSType"];
}
    
- (void)setDeviceOSVersion:(NSString *) deviceOSVersion {
    _deviceOSVersion = deviceOSVersion;
	[self valueChanged:deviceOSVersion forProperty:@"deviceOSVersion"];
}
    
- (void)setDevicePhysicalIds:(NSMutableArray *) devicePhysicalIds {
    _devicePhysicalIds = devicePhysicalIds;
	[self valueChanged:devicePhysicalIds forProperty:@"devicePhysicalIds"];
}
    
- (void)setDeviceTrustType:(NSString *) deviceTrustType {
    _deviceTrustType = deviceTrustType;
	[self valueChanged:deviceTrustType forProperty:@"deviceTrustType"];
}
    
- (void)setDirSyncEnabled:(BOOL ) dirSyncEnabled {
    _dirSyncEnabled = dirSyncEnabled;
    [self valueChangedForBool:dirSyncEnabled forProperty:@"dirSyncEnabled"];
}
    
- (void)setDisplayName:(NSString *) displayName {
    _displayName = displayName;
	[self valueChanged:displayName forProperty:@"displayName"];
}
    
- (void)setLastDirSyncTime:(NSDate *) lastDirSyncTime {
    _lastDirSyncTime = lastDirSyncTime;
	[self valueChanged:lastDirSyncTime forProperty:@"lastDirSyncTime"];
}
    
- (void)setRegisteredOwners:(NSMutableArray *) registeredOwners {
    _registeredOwners = registeredOwners;
	[self valueChanged:registeredOwners forProperty:@"registeredOwners"];
}
    
- (void)setRegisteredUsers:(NSMutableArray *) registeredUsers {
    _registeredUsers = registeredUsers;
	[self valueChanged:registeredUsers forProperty:@"registeredUsers"];
}
    
@end