/*******************************************************************************
**NOTE** This code was generated by a tool and will occasionally be
overwritten. We welcome comments and issues regarding this code; they will be
addressed in the generation tool. If you wish to submit pull requests, please
do so for the templates in that tool.

This code was generated by Vipr (https://github.com/microsoft/vipr) using
the T4TemplateWriter (https://github.com/msopentech/vipr-t4templatewriter).

Copyright (c) Microsoft Open Technologies, Inc. All Rights Reserved.
Licensed under the Apache License 2.0; see LICENSE in the source repository
root for authoritative license information.ï»¿
******************************************************************************/
#import "MSEntityContainerFetchers.h"

@implementation MSEntityContainerUserFetcher

@synthesize operations = _operations;

- (instancetype)initWithUrl:(NSString *)urlComponent parent:(id<MSOrcExecutable>)parent {

    if (self = [super initWithUrl:urlComponent parent:parent asClass:[MSEntityContainerUser class]]) {

		_operations = [[MSEntityContainerUserOperations alloc] initOperationWithUrl:urlComponent parent:parent];
    }

    return self;
}

- (void)update:(id)entity callback:(void (^)(MSEntityContainerUser *user, MSOrcError *e))callback {

	return [super update:entity callback:callback];
}

- (void)delete:(void (^)(int status, MSOrcError *e))callback {

	return [super deleteWithCallback:callback];
}

- (MSEntityContainerUserFetcher *)addCustomParametersWithName:(NSString *)name value:(id)value {
    [super addCustomParametersWithName:name value:value];
    
    return self;
}

- (MSEntityContainerUserFetcher *)addCustomHeaderWithName:(NSString *)name value:(NSString *)value {
    [super addCustomHeaderWithName:name value:value];
    
    return self;
}

- (MSEntityContainerUserFetcher *)select:(NSString *)params {
    [super select:params];
    
    return self;
}

- (MSEntityContainerUserFetcher *)expand:(NSString *)value {
    [super select:value];
    
    return self;
}

- (void) readWithCallback:(void (^)(MSEntityContainerUser *user, MSOrcError *error))callback {
    [super readWithCallback:^(id response, MSOrcError *error) {
        callback(response, error);
    }];
}

- (MSEntityContainerFolderFetcher *)rootFolder {

	 return [[MSEntityContainerFolderFetcher alloc] initWithUrl:@"RootFolder" parent:self asClass:[MSEntityContainerFolder class]];
}

- (MSEntityContainerCalendarCollectionFetcher *)calendars {

    return [[MSEntityContainerCalendarCollectionFetcher alloc] initWithUrl:@"Calendars" parent:self asClass:[MSEntityContainerCalendar class]];
}

- (MSEntityContainerCalendarFetcher *)getCalendarsById:(NSString *)id {

    return [[[MSEntityContainerCalendarCollectionFetcher alloc] initWithUrl:@"Calendars" parent:self asClass:[MSEntityContainerCalendar class]] getById:id];
}

- (MSEntityContainerCalendarFetcher *)calendar {

	 return [[MSEntityContainerCalendarFetcher alloc] initWithUrl:@"Calendar" parent:self asClass:[MSEntityContainerCalendar class]];
}

- (MSEntityContainerCalendarGroupCollectionFetcher *)calendarGroups {

    return [[MSEntityContainerCalendarGroupCollectionFetcher alloc] initWithUrl:@"CalendarGroups" parent:self asClass:[MSEntityContainerCalendarGroup class]];
}

- (MSEntityContainerCalendarGroupFetcher *)getCalendarGroupsById:(NSString *)id {

    return [[[MSEntityContainerCalendarGroupCollectionFetcher alloc] initWithUrl:@"CalendarGroups" parent:self asClass:[MSEntityContainerCalendarGroup class]] getById:id];
}

- (MSEntityContainerEventCollectionFetcher *)events {

    return [[MSEntityContainerEventCollectionFetcher alloc] initWithUrl:@"Events" parent:self asClass:[MSEntityContainerEvent class]];
}

- (MSEntityContainerEventFetcher *)getEventsById:(NSString *)id {

    return [[[MSEntityContainerEventCollectionFetcher alloc] initWithUrl:@"Events" parent:self asClass:[MSEntityContainerEvent class]] getById:id];
}

- (MSEntityContainerEventCollectionFetcher *)calendarView {

    return [[MSEntityContainerEventCollectionFetcher alloc] initWithUrl:@"CalendarView" parent:self asClass:[MSEntityContainerEvent class]];
}

- (MSEntityContainerEventFetcher *)getCalendarViewById:(NSString *)id {

    return [[[MSEntityContainerEventCollectionFetcher alloc] initWithUrl:@"CalendarView" parent:self asClass:[MSEntityContainerEvent class]] getById:id];
}

- (MSEntityContainerFolderCollectionFetcher *)folders {

    return [[MSEntityContainerFolderCollectionFetcher alloc] initWithUrl:@"Folders" parent:self asClass:[MSEntityContainerFolder class]];
}

- (MSEntityContainerFolderFetcher *)getFoldersById:(NSString *)id {

    return [[[MSEntityContainerFolderCollectionFetcher alloc] initWithUrl:@"Folders" parent:self asClass:[MSEntityContainerFolder class]] getById:id];
}

- (MSEntityContainerMessageCollectionFetcher *)messages {

    return [[MSEntityContainerMessageCollectionFetcher alloc] initWithUrl:@"Messages" parent:self asClass:[MSEntityContainerMessage class]];
}

- (MSEntityContainerMessageFetcher *)getMessagesById:(NSString *)id {

    return [[[MSEntityContainerMessageCollectionFetcher alloc] initWithUrl:@"Messages" parent:self asClass:[MSEntityContainerMessage class]] getById:id];
}

- (MSEntityContainerContactCollectionFetcher *)contacts {

    return [[MSEntityContainerContactCollectionFetcher alloc] initWithUrl:@"Contacts" parent:self asClass:[MSEntityContainerContact class]];
}

- (MSEntityContainerContactFetcher *)getContactsById:(NSString *)id {

    return [[[MSEntityContainerContactCollectionFetcher alloc] initWithUrl:@"Contacts" parent:self asClass:[MSEntityContainerContact class]] getById:id];
}

- (MSEntityContainerContactFolderCollectionFetcher *)contactFolders {

    return [[MSEntityContainerContactFolderCollectionFetcher alloc] initWithUrl:@"ContactFolders" parent:self asClass:[MSEntityContainerContactFolder class]];
}

- (MSEntityContainerContactFolderFetcher *)getContactFoldersById:(NSString *)id {

    return [[[MSEntityContainerContactFolderCollectionFetcher alloc] initWithUrl:@"ContactFolders" parent:self asClass:[MSEntityContainerContactFolder class]] getById:id];
}

@end