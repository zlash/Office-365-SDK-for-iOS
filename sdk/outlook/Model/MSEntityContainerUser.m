/*******************************************************************************
**NOTE** This code was generated by a tool and will occasionally be
overwritten. We welcome comments and issues regarding this code; they will be
addressed in the generation tool. If you wish to submit pull requests, please
do so for the templates in that tool.

This code was generated by Vipr (https://github.com/microsoft/vipr) using
the T4TemplateWriter (https://github.com/msopentech/vipr-t4templatewriter).

Copyright (c) Microsoft Open Technologies, Inc. All Rights Reserved.
Licensed under the Apache License 2.0; see LICENSE in the source repository
root for authoritative license information.ï»¿
******************************************************************************/

#import "MSEntityContainerModels.h"

/**
* The implementation file for type MSEntityContainerUser.
*/

@implementation MSEntityContainerUser	

@synthesize odataType = _odataType;
@synthesize DisplayName = _displayName;
@synthesize Alias = _alias;
@synthesize MailboxGuid = _mailboxGuid;
@synthesize RootFolder = _rootFolder;
@synthesize Calendars = _calendars;
@synthesize Calendar = _calendar;
@synthesize CalendarGroups = _calendarGroups;
@synthesize Events = _events;
@synthesize CalendarView = _calendarView;
@synthesize Folders = _folders;
@synthesize Messages = _messages;
@synthesize Contacts = _contacts;
@synthesize ContactFolders = _contactFolders;

- (instancetype)init {

	if (self = [super init]) {

		_odataType = @"#Microsoft.OutlookServices.User";
		_calendars = [[NSMutableArray alloc] initWithCollectionType:@"MSEntityContainerCalendar"];
		_calendarGroups = [[NSMutableArray alloc] initWithCollectionType:@"MSEntityContainerCalendarGroup"];
		_events = [[NSMutableArray alloc] initWithCollectionType:@"MSEntityContainerEvent"];
		_calendarView = [[NSMutableArray alloc] initWithCollectionType:@"MSEntityContainerEvent"];
		_folders = [[NSMutableArray alloc] initWithCollectionType:@"MSEntityContainerFolder"];
		_messages = [[NSMutableArray alloc] initWithCollectionType:@"MSEntityContainerMessage"];
		_contacts = [[NSMutableArray alloc] initWithCollectionType:@"MSEntityContainerContact"];
		_contactFolders = [[NSMutableArray alloc] initWithCollectionType:@"MSEntityContainerContactFolder"];
    }

	return self;
}

- (void)setDisplayName:(NSString *) displayName {
    _displayName = displayName;
	[self valueChanged:displayName forProperty:@"DisplayName"];
}
    
- (void)setAlias:(NSString *) alias {
    _alias = alias;
	[self valueChanged:alias forProperty:@"Alias"];
}
    
- (void)setMailboxGuid:(NSString *) mailboxGuid {
    _mailboxGuid = mailboxGuid;
	[self valueChanged:mailboxGuid forProperty:@"MailboxGuid"];
}
    
- (void)setRootFolder:(MSEntityContainerFolder *) rootFolder {
    _rootFolder = rootFolder;
	[self valueChanged:rootFolder forProperty:@"RootFolder"];
}
    
- (void)setCalendars:(NSMutableArray *) calendars {
    _calendars = calendars;
	[self valueChanged:calendars forProperty:@"Calendars"];
}
    
- (void)setCalendar:(MSEntityContainerCalendar *) calendar {
    _calendar = calendar;
	[self valueChanged:calendar forProperty:@"Calendar"];
}
    
- (void)setCalendarGroups:(NSMutableArray *) calendarGroups {
    _calendarGroups = calendarGroups;
	[self valueChanged:calendarGroups forProperty:@"CalendarGroups"];
}
    
- (void)setEvents:(NSMutableArray *) events {
    _events = events;
	[self valueChanged:events forProperty:@"Events"];
}
    
- (void)setCalendarView:(NSMutableArray *) calendarView {
    _calendarView = calendarView;
	[self valueChanged:calendarView forProperty:@"CalendarView"];
}
    
- (void)setFolders:(NSMutableArray *) folders {
    _folders = folders;
	[self valueChanged:folders forProperty:@"Folders"];
}
    
- (void)setMessages:(NSMutableArray *) messages {
    _messages = messages;
	[self valueChanged:messages forProperty:@"Messages"];
}
    
- (void)setContacts:(NSMutableArray *) contacts {
    _contacts = contacts;
	[self valueChanged:contacts forProperty:@"Contacts"];
}
    
- (void)setContactFolders:(NSMutableArray *) contactFolders {
    _contactFolders = contactFolders;
	[self valueChanged:contactFolders forProperty:@"ContactFolders"];
}
    
@end